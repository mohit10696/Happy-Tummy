def projectName = ""
def branchName1 = "asdasd"
def branchName2 = "master"
def dirName = "${projectName}"
def osUser = "ubuntu"
def ipAddr = ""
def agentName = ""

pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: "7"))
    }
    agent {
        docker { image 'node:14.15.0' }
    }
    environment {
        HOME = '.'
    }
    stages {
        stage("Build")
        {
            steps
            {
                dir('HappyTummyFrontend') {
                    sh "npm cache clean --force"
                    sh "npm install"
                    sh "npm install -g @angular/cli"
                    sh "ng build --prod"
                }
            }
        }

        stage("Deploy")
        {
            steps
            {
                script {
                    if (env.BRANCH_NAME == "${branchName2}")
                    {
                        echo "Deleting the old build.  "
                        sh "rm -r /var/empty2/* || ls"
                        echo "Old build deleted, Deploying new build"
                        sh "cp -a dist/BMS/. /var/empty2/"
                        echo "Build Deployed. "
                    }else if (env.BRANCH_NAME == "${branchName1}")
                    {   
                        sshagent ( ["${agentName}"]) {
                            sh "cd  /root/dcompose/${dirName} && ls" 
                            sh "apt-get update && apt-get install zip"
                            sh "cd  /root/dcompose/${dirName} && zip -r latest.zip ."

                            sh "scp -o StrictHostKeyChecking=no /root/dcompose/${dirName}/latest.zip ${osUser}@${ipAddr}:/home/ubuntu/"
                            sh "ssh -o StrictHostKeyChecking=no ${osUser}@${ipAddr} ls -la /home/ubuntu"
                            sh "ssh -o StrictHostKeyChecking=no ${osUser}@${ipAddr} sudo unzip  -o /home/ubuntu/latest.zip -d /usr/share/nginx/html/"

                        }
                    }

                }
            }
        }
    }
    post { 
        always { 
            cleanWs()
        }
    }
}