def projectName = ""
def branchName1 = "asdasd"
def branchName2 = "master"
def dirName = "${projectName}"
def osUser = "ubuntu"
def ipAddr = ""
def agentName = ""

pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: "7"))
    }
    agent any
    environment {
        HOME = '.'
    }
    stages {
        stage("Build")
        {
            steps
            {
                sh "cd /"
                sh "ls"
                dir('happy-tummy-backend') {
                     sh '''#!/bin/bash
                        curl -s https://get.sdkman.io | bash
                        source "/home/csci5308vm6/.sdkman/bin/sdkman-init.sh"
                        sdk install springboot
                        sdk install maven
                        sdk help
                        mvn compile
                        mvn package'''
                }
            }
        }

        stage("Test")
        {
            steps
            {
                script {
                    sh "cd /"
                    sh "ls"
                    dir('happy-tummy-backend') {
                    sh '''#!/bin/bash
                        curl -s https://get.sdkman.io | bash
                        source "/home/csci5308vm6/.sdkman/bin/sdkman-init.sh"
                        mvn test'''
                    }
                }
            }
        }

        stage("Deploy")
        {
            steps
            {
                script {
                    dir('happy-tummy-backend') {
                        echo "Deploying the application"
                        echo "Copying the guided version"
                        sh "cp target/happy-tummy-backend-0.0.1-SNAPSHOT.jar /var/www/spring/"
                        sh "cp pm2-script.sh /var/www/spring/"
                        sh '''#!/bin/sh
                              echo "RESTARTING ALL"
                              sudo pm2 restart all
                              echo "ALL RESTARTED"
                        '''
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}